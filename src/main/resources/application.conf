sdrc: {
  cursor: {
    mongo: {
      uri: "mongodb://127.0.0.1:27017"
      database: "oplog-collector"
    }
  }
  collector: {
    mongo: {
      uri: "mongodb://127.0.0.1:27017/?replicaSet=local-rs"
      database: "local"
      ops: ["i", "u", "d"]
      ns-prefix: ["sdrc"]
    }
  }
  broker: {
    host: "10.224.10.143:9092"
    topic: "oplog"
  }
}

akka.actor{
  serialization-bindings {
    "Serializable" = jackson-json
    "org.mongodb.scala.bson.collection.immutable.Document" = jackson-json
  }
}

akka.persistence {
  journal {
    plugin = "akka.persistence.journal.leveldb"
  }
  snapshot-store {
    plugin = "akka.persistence.snapshot-store.local"
  }
}

# LevelDB journal plugin.
# Note: this plugin requires explicit LevelDB dependency, see below.
akka.persistence.journal.leveldb {
  # Class name of the plugin.
  class = "akka.persistence.journal.leveldb.LeveldbJournal"
  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka.persistence.dispatchers.default-plugin-dispatcher"
  # Dispatcher for message replay.
  replay-dispatcher = "akka.persistence.dispatchers.default-replay-dispatcher"
  # Storage location of LevelDB files.
  dir = "journal"
  # Use fsync on write.
  fsync = on
  # Verify checksum on read.
  checksum = off
  # Native LevelDB (via JNI) or LevelDB Java port.
  native = on
  # Number of deleted messages per persistence id that will trigger journal compaction
  compaction-intervals {
  }
}